# dsenc_check = left_join(dsenc_check,ds_t0_arm)
# dsenc_check = dsenc_check %>% select(RECORD_ID,t0, arm, START_DATE,ENC_TYPE, LOCATION_NAME,VISIT_PROVIDER,VISIT_PROVIDER_SPECIALTY)
# dsenc_check_fil = dsenc_check %>% filter(as.Date(START_DATE, "%m/%d/%Y")>=as.Date(t0, "%Y-%m-%d"))
dsent0 = left_join(ds_t0_pcp_arm,dsENCOUNTERS_all) %>% filter(as.Date(START_DATE, "%m/%d/%Y")>as.Date(t0, "%Y-%m-%d"))
### Create variable for pharmacist encounter(Pharm_ENC) and nephrology e-council NOT CAHTHY nephrology visits
dsENC_carema_old =dsent0 %>% filter(as.Date(START_DATE, "%m/%d/%Y")>as.Date(t0, "%Y-%m-%d")) %>%
filter(ENC_TYPE =="CARE MANAGEMENT") %>%
filter(is.na(VISIT_PROVIDER_SPECIALTY)|VISIT_PROVIDER_SPECIALTY == "NEPHROLOGY")
dsENC_carema_ID = dsENC_carema_old %>% select(RECORD_ID,arm) %>% unique()
track_res = add_ind(df = dsENC_carema_old,df_old = ds_demo_t0_1_pcp,name = 'Pts have care managemet(pharm+neph) after t0',track_res = track_res)
# pts_num$'Pts have care managemet(pharm+neph) after t0' = c(table(dsENC_carema_ID$arm), length(unique(dsENC_carema$RECORD_ID)))
dsENC_carema =  dsENC_carema_old %>% filter(!VISIT_PROVIDER =="GEFFEL, CATHERINE MARY") %>%
mutate(Pharm_ENC = ifelse(VISIT_PROVIDER == "WELTMAN, MELANIE RENEE",1,0),
Neph_Ecoun = ifelse(VISIT_PROVIDER_SPECIALTY == "NEPHROLOGY" ,1,0)) %>%
mutate_at(vars(Pharm_ENC:Neph_Ecoun), ~replace(., is.na(.), 0)) %>%
mutate(ind = Pharm_ENC +Neph_Ecoun,
t0 = as.Date(t0, "%Y-%m-%d"),
START_DATE = as.Date(START_DATE, "%m/%d/%Y")) %>%
filter(ind >0)
dsENC_carema_ID = dsENC_carema %>% select(RECORD_ID,arm) %>% unique()
track_res = add_ind(df = dsENC_carema,df_old = dsENC_carema_old,name = 'Pts have care managemet(pharm+neph)_clean',track_res = track_res)
# pts_num$'Pts have care managemet(pharm+neph)_clean' = c(0,table(dsENC_carema_ID$arm), length(unique(dsENC_carema$RECORD_ID)))
# Filter 16 days time window
dsENC_PHARM_old = dsENC_carema %>% filter(Pharm_ENC == 1)
dsENC_PHARM_id = dsENC_PHARM %>% select(RECORD_ID,arm) %>% unique()
load("~/OneDrive - University of Pittsburgh/KidneyCHAMP/Programs/Workdir/0503meeting.RData")
8.5/11.5
(14.5+9.8)/2
(14.5*0.43+9.8*0.57)/2
(14.5*0.43+9.8*0.57)
(14.5*0.43+8.9*0.57)
0.012/0.014
?runif
test <- function(i){
cur_ind <- runif(1,0,10)
next_ind <- runif(1,0,10)
i = 1
while (next_ind <= cur_ind) {
cur_ind <- next_ind
next_ind <- runif(1,0,10)
i <- i +1
}
return(i)
}
test <- function(i){
cur_ind <- runif(1,0,10)
next_ind <- runif(1,0,10)
i = 1
while (next_ind <= cur_ind) {
cur_ind <- next_ind
next_ind <- runif(1,0,10)
i <- i +1
}
return(i)
}
res <- c()
for (i in 1:10000) {
res <- c(res,test())
}
mean(res)
table(res)
test <- function(i){
tmp <- cur_ind
cur_ind <- runif(1,0,10)
next_ind <- runif(1,0,10)
i = 1
while (next_ind <= cur_ind) {
cur_ind <- next_ind
next_ind <- runif(1,0,10)
i <- i +1
tmp <- c(tmp,cur_ind)
}
return(list(i = i,tmp = tmp))
}
res <- c()
for (i in 1:10000) {
res <- c(res,test())
}
test <- function(i){
cur_ind <- runif(1,0,10)
next_ind <- runif(1,0,10)
i = 1
tmp <- cur_ind
while (next_ind <= cur_ind) {
cur_ind <- next_ind
next_ind <- runif(1,0,10)
i <- i +1
tmp <- c(tmp,cur_ind)
}
return(list(i = i,tmp = tm))
}
res <- c()
for (i in 1:10000) {
res <- c(res,test())
}
test <- function(i){
cur_ind <- runif(1,0,10)
next_ind <- runif(1,0,10)
i = 1
tmp <- cur_ind
while (next_ind <= cur_ind) {
cur_ind <- next_ind
next_ind <- runif(1,0,10)
i <- i +1
tmp <- c(tmp,cur_ind)
}
return(list(i = i,tmp = tmp))
}
res <- c()
for (i in 1:10000) {
res <- c(res,test())
}
View(res)
test <- function(i){
cur_ind <- runif(1,0,10)
next_ind <- runif(1,0,10)
i = 1
tmp <- next_ind
while (next_ind <= cur_ind) {
cur_ind <- next_ind
next_ind <- runif(1,0,10)
i <- i +1
tmp <- c(tmp,next_ind)
}
return(list(i = i,tmp = tmp))
}
res <- c()
for (i in 1:10000) {
res <- c(res,test())
}
View(res)
test <- function(i){
cur_ind <- runif(1,0,10)
next_ind <- runif(1,0,10)
i = 1
tmp <- c(cur_ind,next_ind)
while (next_ind <= cur_ind) {
cur_ind <- next_ind
next_ind <- runif(1,0,10)
i <- i +1
tmp <- c(tmp,next_ind)
}
return(list(i = i,tmp = tmp))
}
res <- c()
for (i in 1:10000) {
res <- c(res,test())
}
View(res)
View(res)
test <- function(i){
cur_ind <- runif(1,0,10)
next_ind <- runif(1,0,10)
i = 2
tmp <- c(cur_ind,next_ind)
while (next_ind <= cur_ind) {
cur_ind <- next_ind
next_ind <- runif(1,0,10)
i <- i +1
tmp <- c(tmp,next_ind)
}
return(i)
}
res <- c()
for (i in 1:10000) {
res <- c(res,test())
}
mean(res)
res <- c()
for (i in 1:1000000) {
res <- c(res,test())
}
200/12
10/6
?resid
?nnls
??nnls
library(EnsDeconv)
devtools::install_github("randel/EnsDeconv")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("randel/EnsDeconv")
install.packages("rlang")
install.packages("rlang")
devtools::install_github("randel/EnsDeconv")
install.packages("edgeR")
BiocManager::install("edgeR")
BiocManager::install("Seurat")
254-15-13-19-11-7-3-8
load("~/Desktop/XuepingFHS.RData")
source("http://depot.sagebase.org/CRAN.R")
pkgInstall(c("synapseClient"))
install.packages("synapser", repos=c("https://sage-bionetworks.github.io/ran", "http://cran.fhcrc.org"))
install.packages("PythonEmbedInR", repos=c("http://cran.fhcrc.org", "http://ran.synapse.org"))
install.packages("synapser")
library(purrr)
?map
1:10 %>%
map(rnorm, n = 10)
1:10 %>%
map(rnorm, n = 10) %>%  # output a list
map_dbl(mean)           # output an atomic vector
?pheatmap
library(pheatmap)
?pheatmap
33*2
library(dplyr)
matrices <- list(matrix(1:4, nrow = 2), matrix(5:8, nrow = 2), matrix(1:4, nrow = 2))
# Use lapply to apply the unique function to each matrix in the list
unique_matrices <- lapply(matrices, unique)
# Remove duplicates from the list by comparing the string representation of each matrix
unique_matrices <- unique(matrices, deparse.level = 1)
View(unique_matrices)
unique_matrices <- lapply(matrices, unique)
View(unique_matrices)
?unique
?fisher.test
264*6
440+330+495
440+330+495+120
4/18+1/24+9/32+4/66
5/18+5/24+5/32+5/66
8/18+11/24+3/32+8/66
5/18+5/24+5/32+16/66
5/18+5/24+13/32+5/66
1368-680
1368-690
5/18+5/24+5/48+16/66
1300*2.5
345.81+23.63
345.81+23.63+132.33
install.packages("gptstudio")
Sys.setenv(OPENAI_API_KEY = "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")
gptstudio:::addin_chatgpt()
remotes::install_github("rstudio/bslib")
gptstudio:::addin_chatgpt()
install.packages("bslib")
install.packages("bslib")
gptstudio:::addin_chatgpt()
gptstudio:::addin_chatgpt()
1/2^5
1/2^7
1/2^10
knitr::opts_chunk$set(echo = TRUE)
library(readr)
treatments_2017_2020 <- read_csv("Downloads/Datasets/treatments_2017-2020.csv")
library(compareGroups)
treatments_2017_2020 <- treatments_2017_2020 %>% filter(REASON != 7) %>%
mutate(REASON = ifelse(REASON == 1, 1,0))
library(dplyr)
treatments_2017_2020 <- treatments_2017_2020 %>% filter(REASON != 7) %>%
mutate(REASON = ifelse(REASON == 1, 1,0))
colnames(treatments_2017_2020)
treatments_2017_2020 <- treatments_2017_2020 %>% filter(REASON != 7) %>%
mutate(REASON = ifelse(REASON == 1, 1,0)) %>% select(-CBSA,-cbsatitle,-metropolitanmicropolitanstatis,-CASEID,-statename,-fipscountycode,-centraloutlyingcounty)
compareGroups(REASON ~ ., data=treatments_2017_2020)
treatments_2017_2020 <- treatments_2017_2020 %>% filter(REASON != 7) %>%
mutate(REASON = ifelse(REASON == 1, 1,0)) %>% select(-CBSA,-cbsatitle,-metropolitanmicropolitanstatis,-CASEID,-statename,-fipscountycode,-centraloutlyingcounty)%>%
mutate(SERVICES = recode(as.factor(SERVICES),
"1" = "Detox, 24-hour, hospital inpatient",
"2" = "Detox, 24-hour, free-standing residential",
"3" = "Rehab/residential, hospital (non-detox)",
"4" = "Rehab/residential, short term (30 days or fewer)",
"5" = "Rehab/residential, long term (more than 30 days)",
"6" = "Ambulatory, intensive outpatient",
"7" = "Ambulatory, non-intensive outpatient",
"8" = "Ambulatory, detoxification",
"9" = "Missing"
),SERVICES_D = recode(as.factor(SERVICES_D),
"1" = "Detox, 24-hour, hospital inpatient",
"2" = "Detox, 24-hour, free-standing residential",
"3" = "Rehab/residential, hospital (non-detox)",
"4" = "Rehab/residential, short term (30 days or fewer)",
"5" = "Rehab/residential, long term (more than 30 days)",
"6" = "Ambulatory, intensive outpatient",
"7" = "Ambulatory, non-intensive outpatient",
"8" = "Ambulatory, detoxification",
"9" = "Missing"
),
VET = recode(as.factor(VET),
`1` = "Yes",
`2` = "No",
`-9` = "Missing"
),
LIVARAG_D = recode(as.factor(LIVARAG_D),
`1` = "Homeless",
`2` = "Dependent living",
`3` = "Independent living",
`-9` = "Missing"
),
LIVARAG = recode(as.factor(LIVARAG),
`1` = "Homeless",
`2` = "Dependent living",
`3` = "Independent living",
`-9` = "Missing"
),
REGION = recode(as.factor(REGION),
`0` = "U.S. territories",
`1` = "Northeast",
`2` = "Midwest",
`3` = "South",
`4` = "West",
`-9` = "Missing"
))
treatments_2017_2020 <- treatments_2017_2020 %>%  mutate(SERVICES = recode(as.factor(SERVICES),
"1" = "Detox, 24-hour, hospital inpatient",
"2" = "Detox, 24-hour, free-standing residential",
"3" = "Rehab/residential, hospital (non-detox)",
"4" = "Rehab/residential, short term (30 days or fewer)",
"5" = "Rehab/residential, long term (more than 30 days)",
"6" = "Ambulatory, intensive outpatient",
"7" = "Ambulatory, non-intensive outpatient",
"8" = "Ambulatory, detoxification",
"9" = "Missing"
),SERVICES_D = recode(as.factor(SERVICES_D),
"1" = "Detox, 24-hour, hospital inpatient",
"2" = "Detox, 24-hour, free-standing residential",
"3" = "Rehab/residential, hospital (non-detox)",
"4" = "Rehab/residential, short term (30 days or fewer)",
"5" = "Rehab/residential, long term (more than 30 days)",
"6" = "Ambulatory, intensive outpatient",
"7" = "Ambulatory, non-intensive outpatient",
"8" = "Ambulatory, detoxification",
"9" = "Missing"
),
VET = recode(as.factor(VET),
`1` = "Yes",
`2` = "No",
`-9` = "Missing"
),
LIVARAG_D = recode(as.factor(LIVARAG_D),
`1` = "Homeless",
`2` = "Dependent living",
`3` = "Independent living",
`-9` = "Missing"
),
LIVARAG = recode(as.factor(LIVARAG),
`1` = "Homeless",
`2` = "Dependent living",
`3` = "Independent living",
`-9` = "Missing"
),
REGION = recode(as.factor(REGION),
`0` = "U.S. territories",
`1` = "Northeast",
`2` = "Midwest",
`3` = "South",
`4` = "West",
`-9` = "Missing"
))
compareGroups(REASON ~ ., data=treatments_2017_2020)
res <- compareGroups(REASON ~ ., data=treatments_2017_2020)
createTable(res, show.ratio=TRUE)
createTable(res)
res <- compareGroups(REASON ~ ., data=treatments_2017_2020)
createTable(res)
?compareGroups
treatments_2017_2020 <- treatments_2017_2020 %>% select(-countycountyequivalent)
res <- compareGroups(REASON ~ ., data=treatments_2017_2020, method = c(triglyc=2))
install.packages("v")
install.packages("compareGroups")
install.packages("compareGroups")
library(compareGroups)
rm(list = ls())
remove.packages("compareGroups")
install.packages("compareGroups")
install.packages("compareGroups")
library(compareGroups)
?compareGroups
knitr::opts_chunk$set(echo = TRUE)
library(readr)
treatments_2017_2020 <- read_csv("Downloads/Datasets/treatments_2017-2020.csv")
library(dplyr)
library(compareGroups)
treatments_2017_2020 <- treatments_2017_2020 %>% filter(REASON != 7) %>%
mutate(REASON = ifelse(REASON == 1, 1,0)) %>% select(-CBSA,-cbsatitle,-metropolitanmicropolitanstatis,-CASEID,-statename,-fipscountycode,-centraloutlyingcounty,-countycountyequivalent)
treatments_2017_2020 <- treatments_2017_2020 %>%  mutate(SERVICES = recode(as.factor(SERVICES),
"1" = "Detox, 24-hour, hospital inpatient",
"2" = "Detox, 24-hour, free-standing residential",
"3" = "Rehab/residential, hospital (non-detox)",
"4" = "Rehab/residential, short term (30 days or fewer)",
"5" = "Rehab/residential, long term (more than 30 days)",
"6" = "Ambulatory, intensive outpatient",
"7" = "Ambulatory, non-intensive outpatient",
"8" = "Ambulatory, detoxification",
"9" = "Missing"
),SERVICES_D = recode(as.factor(SERVICES_D),
"1" = "Detox, 24-hour, hospital inpatient",
"2" = "Detox, 24-hour, free-standing residential",
"3" = "Rehab/residential, hospital (non-detox)",
"4" = "Rehab/residential, short term (30 days or fewer)",
"5" = "Rehab/residential, long term (more than 30 days)",
"6" = "Ambulatory, intensive outpatient",
"7" = "Ambulatory, non-intensive outpatient",
"8" = "Ambulatory, detoxification",
"9" = "Missing"
),
VET = recode(as.factor(VET),
`1` = "Yes",
`2` = "No",
`-9` = "Missing"
),
LIVARAG_D = recode(as.factor(LIVARAG_D),
`1` = "Homeless",
`2` = "Dependent living",
`3` = "Independent living",
`-9` = "Missing"
),
LIVARAG = recode(as.factor(LIVARAG),
`1` = "Homeless",
`2` = "Dependent living",
`3` = "Independent living",
`-9` = "Missing"
),
REGION = recode(as.factor(REGION),
`0` = "U.S. territories",
`1` = "Northeast",
`2` = "Midwest",
`3` = "South",
`4` = "West",
`-9` = "Missing"
))
res <- compareGroups(REASON ~ ., data=treatments_2017_2020, method = c(triglyc=2))
res <- compareGroups(REASON ~ ., data=treatments_2017_2020, method = c(triglyc=2))
createTable(res)
treatments_2017_2020 <- treatments_2017_2020 %>% mutate_at(c('EMPLOY_D', 'MARSTAT', 'PRIMINC', 'TRNQFLG', 'NOPRIOR', 'PREG', 'METHUSE', 'DETNLF_D','INHFLG', 'SUB1_D', 'ALCDRUG', 'SERVICES', 'ETHNIC', 'SERVICES_D', 'DETNLF', 'PRIMPAY'
, 'HERFLG', 'IDU', 'REGION', 'SEDHPFLG', 'BENZFLG', 'OPSYNFLG', 'ALCFLG', 'OTCFLG',
'HLTHINS', 'DIVISION', 'GENDER', 'AMPHFLG', 'PCPFLG', 'PSOURCE', 'COKEFLG', 'COKEFLG'
,'PSYPROB', 'RACE', 'ROUTE1','DETCRIM', 'VET','ARRESTS_D', 'MARFLG','STIMFLG','LIVARAG_D', 'SUB1',
'BARBFLG', 'EMPLOY', 'LIVARAG', 'ARRESTS', 'EDUC', 'DSMCRIT', 'METHFLG','OTHERFLG', 'FREQ_ATND_SELF_HELP_D', 'FREQ1_D','FREQ1', 'FREQ_ATND_SELF_HELP',
'metropolitanmicropolitanstatis'),as.character)
treatments_2017_2020 <- treatments_2017_2020 %>% mutate_at(c('EMPLOY_D', 'MARSTAT', 'PRIMINC', 'TRNQFLG', 'NOPRIOR', 'PREG', 'METHUSE', 'DETNLF_D','INHFLG', 'SUB1_D', 'ALCDRUG', 'SERVICES', 'ETHNIC', 'SERVICES_D', 'DETNLF', 'PRIMPAY'
, 'HERFLG', 'IDU', 'REGION', 'SEDHPFLG', 'BENZFLG', 'OPSYNFLG', 'ALCFLG', 'OTCFLG',
'HLTHINS', 'DIVISION', 'GENDER', 'AMPHFLG', 'PCPFLG', 'PSOURCE', 'COKEFLG', 'COKEFLG'
,'PSYPROB', 'RACE', 'ROUTE1','DETCRIM', 'VET','ARRESTS_D', 'MARFLG','STIMFLG','LIVARAG_D', 'SUB1',
'BARBFLG', 'EMPLOY', 'LIVARAG', 'ARRESTS', 'EDUC', 'DSMCRIT', 'METHFLG','OTHERFLG', 'FREQ_ATND_SELF_HELP_D', 'FREQ1_D','FREQ1', 'FREQ_ATND_SELF_HELP'),as.character)
res <- compareGroups(REASON ~ ., data=treatments_2017_2020, method = c(triglyc=2))
createTable(res)
library(readr)
treatment_facilities_2016_2020 <- read_csv("Downloads/Datasets/treatment_facilities_2016_2020.csv")
View(treatment_facilities_2016_2020)
summary(treatment_facilities_2016_2020)
library(readr)
facilities_by_state_normalized <- read_csv("Downloads/Datasets/facilities_by_state_normalized.csv")
View(facilities_by_state_normalized)
sub_data <- treatments_2017_2020 %>% select(VET,LIVARAG,LIVARAG_D,REGION,SERVICES,SERVICES_D,REASON,LOS)
merged_temp <- left_join(sub_data, facilities_by_state_normalized, by = c("STFIPS" = "state_fips","DISYR" =  "year"))
sub_data <- treatments_2017_2020 %>% select(VET,LIVARAG,LIVARAG_D,REGION,SERVICES,SERVICES_D,REASON,LOS,STFIPS,DISYR)
merged_temp <- left_join(sub_data, facilities_by_state_normalized, by = c("STFIPS" = "state_fips","DISYR" =  "year"))
View(merged_temp)
for (st in unique(merged_temp$STFIPS)) {
compareGroups(REASON ~ .-STFIPS, data=merged_temp, subset = STFIPS==st)
}
summary(merged_temp)
table(merged_temp$STFIPS)
unique(merged_temp$STFIPS)
res <- compareGroups(REASON ~ .-STFIPS, data=merged_temp, subset = STFIPS==6)
createTable(res)
createTable(compareGroups(REASON ~ STFIPS, data=merged_temp))
View(res)
lapply(res, function(i) i[[p.overall]])
lapply(res, function(i) i[["p.overall"]])
?compareGroups
createTable(compareGroups(REASON ~ STFIPS, data=merged_temp), show.ratio=TRUE)
createTable(res, show.ratio=TRUE)
createTable(compareGroups(REASON ~ ., data=sub_data), show.ratio=TRUE)
length(unique(merged_temp$STFIPS))
unique(merged_temp$STFIPS)
?cor.test
library(readr)
meta <- read_csv("Downloads/meta.csv")
View(meta)
table(meta$...1)
colnames(meta)
library(readr)
media_6 <- read_csv("Downloads/scMD/media-6.csv")
View(media_6)
View(media_6)
table(meta_6$Region)
table(media_6$Region)
table(media_6$Region,media_6$MajorType)
media_6 <- media_6 %>% filter(MajorType == "EC")
library(dplyr)
media_6 <- media_6 %>% filter(MajorType == "EC")
table(media_6$Region)
fisher.test(5,25)
fisher.test(c(5,0),c(30,0))
fisher.test(c(20,0),c(35,0))
fisher.test(c(4,10),c(45,22))
fisher.test(c(4,10),c(45-4,22-10))
fisher.test(c(20,0),c(15,0))
fisher.test(c(5,0),c(25,0))
fisher.test(c(40,0),c(20,0))
26+5.6+6.31+7.49+3.99+1.49+4.97+1.89+0.69+3.02+0.99+2.99+4.99
26+(5.6+6.31+7.49+3.99+1.49+4.97+1.89+0.69+3.02+0.99+2.99+4.99)*0.95
(3.29+5.39)*0.95
setwd("~/Desktop/Package/scMD")
usethis::create_package(".")
here::dr_here()
usethis::use_pkgdown_github_pages()
usethis::gh_token_help()
create_github_token()
usethis::edit_r_environ()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
# Run once to configure package to use pkgdown
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
