[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2023). scMD: Package (Title Case). R package version 0.1.0.","code":"@Manual{,   title = {scMD: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"scmd","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"scMD (single cell Methylation Deconvolution), cellular deconvolution framework reliably estimate cell type fractions tissue-level DNAm data single-cell DNAm references.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"","code":"devtools::install_github(\"randel/scMD\")"},{"path":[]},{"path":"/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"What the Package Does (Title Case)","text":"https://randel.github.io/scMD/","code":""},{"path":"/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"What the Package Does (Title Case)","text":"Cai M, Zhou J, McKennan C, Wang J. (2023). scMD: cell type deconvolution using single-cell DNA methylation references.","code":""},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> [1] \"Hello, world!\""}]
